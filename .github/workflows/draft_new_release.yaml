name: "Create a new release"

on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'Version (The version you want to create a release for)'
        required: true
        
      hotfix:
        type: string
        description: 'Is hotfix? (Check this checkbox if this is a hotfix)'

jobs:
  draft-new-release:
    name: "Create a new release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
          
      - name: Save the initial commit hash
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com
          
      - name: Check pom file existence
        id: check_pom_file_exists
        uses: andstor/file-existence-action@v1
        with:
          files: "pom.xml"
          
      - name: Check package file existence
        id: check_package_file_exists
        uses: andstor/file-existence-action@v1
        with:
          files: "package.json"

      - name: Create a release branch for maven project
        if: steps.check_pom_file_exists.outputs.files_exists == 'true' && github.event.inputs.hotfix  == 'false'
        run: |
          mvn external.atlassian.jgitflow:jgitflow-maven-plugin:1.0-m5.1:release-start -DreleaseVersion="${{ inputs.version }}" -DdevelopmentVersion="${{ inputs.version }}-SNAPSHOT" -Dsquash=true
          git reset --soft HEAD~1
        
      - name: Create a hotfix branch for maven project
        if: steps.check_pom_file_exists.outputs.files_exists == 'true' && github.event.inputs.hotfix == 'true'
        run: |
          mvn external.atlassian.jgitflow:jgitflow-maven-plugin:1.0-m5.1:hotfix-start -DreleaseVersion="${{ inputs.version }}" -DdevelopmentVersion="${{ inputs.version }}-SNAPSHOT" -Dsquash=true
          git reset --soft HEAD~1

      - name: Create a release branch for non maven project
        if: steps.check_pom_file_exists.outputs.files_exists == 'false' && github.event.inputs.hotfix  == 'false'
        run: git checkout -b release/${{ inputs.version }}
        
      - name: Create a hotfix branch for non maven project
        if: steps.check_pom_file_exists.outputs.files_exists == 'false' && github.event.inputs.hotfix  == 'true'
        run: git checkout -b hotfix/${{ inputs.version }}
          
      - name: Bump version in package.json
        if: steps.check_package_file_exists.outputs.files_exists == 'true'
        run: yarn version --new-version ${{ inputs.version }} --no-git-tag-version

      - name: Commit modified for the release files
        id: make-commit
        run: |
          git add package.json
          git commit --message "[PERFORM RELEASE] Updates files for the new release ${{ github.event.inputs.version }}"
          echo "::set-output name=branch::$(git branch --show-current)"
          
      - name: Push new branch
        run: git push origin ${{ steps.make-commit.outputs.branch }}
